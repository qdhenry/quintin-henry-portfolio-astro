---
// src/components/Button.astro
interface Props {
	href?: string; // If provided, renders an <a> tag, otherwise <button>
	variant?: 'primary' | 'secondary'; // Style variants
	className?: string; // Allow passing additional classes
}

const { href, variant = 'primary', className } = Astro.props;

// Base styling for all buttons
const baseClasses = "inline-block px-6 py-3 rounded font-mono text-sm font-bold uppercase tracking-wider transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 dark:focus:ring-offset-gray-900";

// Variant-specific styles using Tailwind
// Placeholders - colors should be refined based on final palette in tailwind.config.js
const variantClasses = {
	primary: 'bg-electric-blue text-white hover:bg-blue-700 focus:ring-electric-blue', 
	secondary: 'bg-muted-gray text-white hover:bg-gray-600 focus:ring-muted-gray dark:bg-gray-700 dark:hover:bg-gray-600', 
};

const classes = `${baseClasses} ${variantClasses[variant]} ${className || ''}`;
---

{href ? (
	// Render as a link if href is provided
	<a href={href} class:list={[classes]} {...Astro.props}>
		<slot /> {/* Button text goes here */}
	</a>
) : (
	// Render as a button otherwise
	<button type="button" class:list={[classes]} {...Astro.props}>
		<slot /> {/* Button text goes here */}
	</button>
)}